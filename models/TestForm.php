<?php
/**
 * Created by PhpStorm.
 * User: Anna
 * Date: 05-Oct-16
 * Time: 08:18 AM
 */

namespace app\models;
use yii\base\Model;

class TestForm extends Model {
    // создаем свойства класса
    public $name;
    public $email;
    public $text;

    /**
     * Yii2 позволяет валидировать форму как на сервере так и на клиенте
     * Метод  attributeLabels() позволяет настроить поля формы
     * возвращает массив, 'атрибут' => 'Название для label',
     */

    public function attributeLabels() {
        return [
            'name' => 'Имя',
            'email' => 'E-mail',
            'text' => 'Текст сообщения'
        ];
    }

    /**
     * Метод  rules()
     * возвращает массив с правилами валидации
     * очень желательно указывать правило валидации для всех полей, особенно при работе с БД
     * валидацию можно назвачать сразу для нескольких полей
     */
    public function rules() {
        return [
            /**
             * name, email - обязательно к заполнению
             * параметр message полволяет задать параметры вывода сообщения об ошибке
             * но 'message' работает не для всех валидаторов
             * если нас устраивает default текст сообщения, мы можем просто перевести его на русский
             * переходим в папку config -> web.php
             *  указываем язык интерфейса 'language' => 'ru-RU',
             */

            [ ['name', 'email'], 'required'],
            // валидация являеются ли данные типом email
            [ 'email', 'email' ],
            // указываем минимально допустимое количество символов
            // tooShort - указываем сообщение ошибки
            //['name', 'string', 'min' => 2, 'tooShort' => 'Мало'],
            // указываем максимально допустимое количество символов
            //['name', 'string', 'max' => 5, 'tooLong' => 'Много']

            /**
             * можно для min и max задать правило одной строкой
             * используем валидатор length в массив пердаем [min,max]
             */
            [ 'name', 'string', 'length' => [2,5] ],
            // собственный валидатор
            [ 'name', 'myRule' ],
            /** для поля текст используем фильтр 'trim' - убираем пробелы в начеле и в конце
             * если убрать проверку поля 'text' , но валидация на серверной стороне не пройдет
             * в Yii поля ввода информации являются потенциально не безопасными
             * и если для поля не указанно валидационное правило, тогда данные из этого поля
             * не будут загруженны в нашу модель и не попадут в БД
             * Если вам не важно какие данные попадут в это поле используйте валидацию safe
             */
           // ['text', 'trim'],
            // чтобы поле попало в форму установим валидацию safe
            ['text', 'safe'],
        ];
    }


    /**
     * Можно создвать собственные валидаторы , только их имена не должны пересекаться с встроенными валидаторами
     * Проверяем, если пользователь ввел не 'USA' или не 'Web'
     * ошибка: 'Страна должна быть либо "USA" или "Web".'
     * но такая валидация работает на сервере, на клиентской стороне не сработает
     */
    public function myRule($attribute)
    {
        if (!in_array($this->$attribute, ['USA', 'Web'])) {
            $this->addError($attribute, 'Страна должна быть либо "USA" или "Web".');
        }
    }
}
















